variables:
  BE_IMAGE_NAME: alushkja/brewstore-backend
  BE_IMAGE_NAME_NATIVE: alushkja/brewstore-backend-native
  BE_IMAGE_TAG: 0.0.1
  FE_IMAGE_NAME: alushkja/brewstore-frontend
  FE_IMAGE_TAG: 0.0.1

stages:
  - test
  - package
  - build
  - deploy


run_tests:
  stage: test
  image: maven:3-amazoncorretto-11
  script: 
    - mvn clean test -f backend/pom.xml
  cache:
    paths:
      - .m2/repository/

build_java_artifacts:
  stage: package
  image: maven:3-amazoncorretto-11
  script:
    - mvn package -DskipTests -f backend/pom.xml
  artifacts:
    paths:
      - backend/target/quarkus-app/lib/
      - backend/target/quarkus-app/*.jar
      - backend/target/quarkus-app/app/
      - backend/target/quarkus-app/quarkus/
    expire_in: 30minute
  cache:
    paths:
      - .m2/repository/

build_frontend:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $REGISTRY_USER -p $REGISTRY_PWD
    - cd frontend
  script:
    - docker build -t $FE_IMAGE_NAME:$FE_IMAGE_TAG .
    - docker push $FE_IMAGE_NAME:$FE_IMAGE_TAG
  after_script:
    - cd ..

#package_backend_native_artifact:
#  stage: package
#  image: vegardit/graalvm-maven:release
#  script:
#    - mvn package -DskipTests -f backend/pom.xml -Pnative
#  artifacts:
#    paths:
#      - backend/target/*-runner
#    expire_in: 30minute

build_backend:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $REGISTRY_USER -p $REGISTRY_PWD
    - cd backend
  script:
    - docker build -f src/main/docker/Dockerfile.jvm -t $BE_IMAGE_NAME:$BE_IMAGE_TAG .
    - docker push $BE_IMAGE_NAME:$BE_IMAGE_TAG
  after_script:
    - cd ..
  dependencies:
    - build_java_artifacts

#build_backend_native_docker_image:
#  stage: build
#  image: docker:20.10.16
#  services:
#    - docker:20.10.16-dind
#  variables:
#    DOCKER_TLS_CERTDIR: "/certs"
#  before_script:
#    - docker login -u $REGISTRY_USER -p $REGISTRY_PWD
#    - cd backend
#  script:
#    - docker build -f src/main/docker/Dockerfile.native -t $BE_IMAGE_NAME_NATIVE:$BE_IMAGE_TAG .
#    - docker push $BE_IMAGE_NAME_NATIVE:$BE_IMAGE_TAG
#  after_script:
#    - cd ..
#  dependencies:
#    - package_backend_native_artifact

deploy_to_vps:
  stage: deploy
  before_script:
    - chmod 400 $SSH_KEY
  script:
    - ssh -o StrictHostKeyChecking=no -i $SSH_KEY gitlab@$VPS_IP "
      docker login -u $REGISTRY_USER -p $REGISTRY_PWD &&
      docker rm -f brewstore-backend &&
      docker run -d --name brewstore-backend -p 8089:8089 $BE_IMAGE_NAME:$BE_IMAGE_TAG &&
      docker rm -f brewstore-frontend &&
      docker run -d --name brewstore-frontend -p 5000:80 $FE_IMAGE_NAME:$FE_IMAGE_TAG
      "